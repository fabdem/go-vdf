`(?m)^.{2,}(\[\x00!\x00\$\x00|\[\x00\$\x00\b).{1,26}]\x00`

// ----- HEADERS ------

// variant 1
(?mi)^\s*"lang"\s*\{\s*"language"\s*"[a-z]{1,15}"\s*"tokens"\s*\{ 
"lang" 
{ 
"Language" "English" 
"Tokens" 
{ 


// variant 2
(?mi)^\s*"language"\s*"[a-z]{1,15}"\s*"tokens"\s*\{ 
"Language" "english"
"Tokens"
{

// variant 3
(?mi)^\s*"[a-z]{1,15}"\s*\{
 "tenfoot"
{



// ----- PARSING KEY VALUES ------
// 
(?mi)^\s*"[a-z]{1,}"\s*

*"(?:(?<!\\)(?:\\{2})*\\"|[^"])+(?<!\\)(?:\\{2})*"

((?:.(?!(?<![\\])"))*.?)\1

// try to define end of value as 
//  a quote followed by (spaces followed by a quote
(?mi)^\s*"[a-z]{1,}"\s*".*"\s*

// Version qui ne tient pas compte des escaped "
(?mi)^\s*?"[a-z\d_]{1,}"\s*?".*?"
// avec des groupes et on ignore le debut
(?mi)(?:^\s*)("[a-z\d_:#\$]{1,}")\s*?"[^"\\]*(?:\\.[^"\\]*)*"


https://stackoverflow.com/questions/5695240/php-regex-to-ignore-escaped-quotes-within-quotes
"[^"\\]*(?:\\.[^"\\]*)*"

// avec groupe et sans quotes
(?mi)(?:^\s*")([a-z\d_:#\$]{1,})(?:"\s*")([^"\\]*(?:\\.[^"\\]*)*)"

